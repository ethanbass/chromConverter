% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_chroms.R
\name{read_chroms}
\alias{read_chroms}
\title{Read Chromatograms}
\usage{
read_chroms(
  paths,
  find_files,
  format_in = c("agilent_d", "chemstation", "chemstation_uv", "chemstation_csv",
    "chemstation_ch", "chemstation_fid", "chromeleon_uv", "masshunter_dad", "mzml",
    "shimadzu_fid", "shimadzu_dad", "shimadzu_lcd", "thermoraw", "waters_arw",
    "waters_raw", "msd", "csd", "wsd", "mdf", "other"),
  pattern = NULL,
  parser = c("", "chromconverter", "aston", "entab", "thermoraw", "openchrom", "rainbow"),
  format_out = c("matrix", "data.frame"),
  data_format = c("wide", "long"),
  export = FALSE,
  path_out = NULL,
  export_format = c("csv", "chemstation_csv", "cdf", "mzml", "animl"),
  read_metadata = TRUE,
  progress_bar,
  sample_names = NULL,
  dat = NULL
)
}
\arguments{
\item{paths}{paths to files or folders containing files}

\item{find_files}{Logical. Set to \code{TRUE} (default) if you are providing
the function with a folder or vector of folders containing the files.
Otherwise, set to\code{FALSE}.}

\item{format_in}{Format of files to be imported/converted. Current options
include: \code{chemstation_uv}, \code{chemstation}, \code{chemstation_ch},
\code{chemstation_csv}, \code{masshunter}, \code{masshunter_dad},
\code{shimadzu_fid}, \code{shimadzu_dad}, \code{chromeleon_uv},
\code{agilent_d}, \code{thermoraw}, \code{mzml}, \code{cdf}, \code{mdf},
\code{waters_arw}, \code{waters_raw}, \code{msd}, \code{csd}, \code{wsd},
or \code{other}.}

\item{pattern}{pattern (e.g. a file extension). Defaults to NULL, in which
case file extension will be deduced from \code{format_in}.}

\item{parser}{What parser to use. Current option are \code{chromconverter},
\code{aston}, \code{entab}, \code{thermoraw}, \code{openchrom}, or
\code{rainbow}.}

\item{format_out}{R object format (i.e. data.frame or matrix).}

\item{data_format}{Whether to output data in wide or long format. Either
\code{wide} or \code{long}.}

\item{export}{Logical. If TRUE, the program will export files in the format
specified by \code{export_format} in the directory specified by \code{path_out}.}

\item{path_out}{Path for exporting files. If path not specified, files will
export to current working directory.}

\item{export_format}{Export format. Currently the options include \code{.csv},
\code{chemstation_csv} (utf-16 encoding), and \code{cdf}, unless you are
using OpenChrom parsers, where there are two additional options: \code{mzml},
and \code{animl}.}

\item{read_metadata}{Logical, whether to attach metadata (if it's available).
Defaults to TRUE.}

\item{progress_bar}{Logical. Whether to show progress bar. Defaults to
\code{TRUE} if \code{\link[pbapply]{pbapply}} is installed.}

\item{sample_names}{An optional character vector of sample names. Otherwise
sample names default to the basename of the specified files.}

\item{dat}{Existing list of chromatograms to append results.
(Defaults to NULL).}
}
\value{
A list of chromatograms in \code{matrix} or \code{data.frame} format,
according to the value of \code{format_out}.
}
\description{
Reads chromatograms from specified folders or vector of paths using file
parsers from \href{https://github.com/bovee/aston}{Aston},
\href{https://github.com/bovee/entab}{Entab},
\href{https://github.com/compomics/ThermoRawFileParser}{ThermoRawFileParser},
\href{https://lablicate.com/platform/openchrom}{OpenChrom},
\href{https://rainbow-api.readthedocs.io/}{rainbow}, or internal parsers.
}
\details{
Provides a general interface to chromConverter parsers. Currently recognizes
'Agilent ChemStation' (\code{.uv}, \code{.ch}), 'MassHunter' (\code{.dad})
files, 'Thermo RAW' (\code{.raw}), 'Waters ARW' (\code{.arw}), 'Waters RAW'
(\code{.raw}), 'Chromeleon ASCII' (\code{.txt}), 'Shimadzu ASCII'
(\code{.txt}). Also, wraps Openchrom parsers, which include many additional
formats. To use 'Entab', 'ThermoRawFileParser', or 'Openchrom' parsers,
they must be manually installed. Please see the instructions in the
\href{https://ethanbass.github.io/chromConverter/}{README} for further details.
}
\section{Side effects}{
 If \code{export} is TRUE, chromatograms will be
exported in the format specified by \code{export_format} in the folder
specified by \code{path_out}. Currently, the only option for export is
\code{csv} unless the \code{parser} is \code{openchrom}.
}

\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
path <- "tests/testthat/testdata/dad1.uv"
chr <- read_chroms(path, find_files = FALSE, format_in = "chemstation_uv")
\dontshow{\}) # examplesIf}
}
\author{
Ethan Bass
}
