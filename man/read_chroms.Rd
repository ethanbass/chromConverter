% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_chroms.R
\name{read_chroms}
\alias{read_chroms}
\title{Read Chromatograms}
\usage{
read_chroms(
  paths,
  find_files,
  format_in = c("agilent_d", "agilent_dx", "chemstation", "chemstation_fid",
    "chemstation_ch", "chemstation_csv", "chemstation_uv", "masshunter_dad",
    "chromeleon_uv", "shimadzu_fid", "shimadzu_dad", "shimadzu_lcd", "thermoraw", "mzml",
    "mzxml", "waters_arw", "waters_raw", "msd", "csd", "wsd", "mdf", "other"),
  pattern = NULL,
  parser = c("", "chromconverter", "aston", "entab", "thermoraw", "openchrom", "rainbow"),
  format_out = c("matrix", "data.frame"),
  data_format = c("wide", "long"),
  export = FALSE,
  path_out = NULL,
  export_format = c("csv", "chemstation_csv", "cdf", "mzml", "animl"),
  read_metadata = TRUE,
  metadata_format = c("chromconverter", "raw"),
  progress_bar,
  cl = 1,
  verbose = getOption("verbose"),
  sample_names = NULL,
  dat = NULL
)
}
\arguments{
\item{paths}{paths to files or folders containing files}

\item{find_files}{Logical. Set to \code{TRUE} (default) if you are providing
the function with a folder or vector of folders containing the files.
Otherwise, set to\code{FALSE}.}

\item{format_in}{Format of files to be imported/converted. Current options
include: \code{agilent_d}, \code{agilent_dx}, \code{chemstation},
\code{chemstation_uv}, \code{chemstation_ch}, \code{chemstation_csv},
\code{masshunter}, \code{masshunter_dad}, \code{chromeleon_uv},
\code{shimadzu_fid}, \code{shimadzu_dad}, \code{thermoraw},
\code{waters_arw}, \code{waters_raw}, \code{mzml}, \code{mzxml},
\code{cdf}, \code{mdf}, \code{msd}, \code{csd}, \code{wsd}, or \code{other}.}

\item{pattern}{pattern (e.g. a file extension). Defaults to NULL, in which
case file extension will be deduced from \code{format_in}.}

\item{parser}{What parser to use. Current option are \code{chromconverter},
\code{aston}, \code{entab}, \code{thermoraw}, \code{openchrom}, or
\code{rainbow}.}

\item{format_out}{R object format (i.e. data.frame or matrix).}

\item{data_format}{Whether to output data in wide or long format. Either
\code{wide} or \code{long}.}

\item{export}{Logical. If TRUE, the program will export files in the format
specified by \code{export_format} in the directory specified by \code{path_out}.}

\item{path_out}{Path for exporting files. If path not specified, files will
export to current working directory.}

\item{export_format}{Export format. Currently the options include \code{.csv},
\code{chemstation_csv} (utf-16 encoding), and \code{cdf}, unless you are
using OpenChrom parsers, where there are two additional options: \code{mzml},
and \code{animl}.}

\item{read_metadata}{Logical, whether to attach metadata (if it's available).
Defaults to TRUE.}

\item{metadata_format}{Format to output metadata. Either \code{chromconverter}
or \code{raw}.}

\item{progress_bar}{Logical. Whether to show progress bar. Defaults to
\code{TRUE} if \code{\link[pbapply]{pbapply}} is installed.}

\item{cl}{Argument to \code{\link[pbapply]{pbapply}} specifying the number
of clusters to use or a cluster object created by
\code{\link[parallel]{makeCluster}}. Defaults to 1.}

\item{verbose}{Logical. Whether to print output from external parsers to the
R console.}

\item{sample_names}{An optional character vector of sample names. Otherwise
sample names default to the basename of the specified files.}

\item{dat}{Existing list of chromatograms to append results.
(Defaults to NULL).}
}
\value{
A list of chromatograms in \code{matrix} or \code{data.frame} format,
according to the value of \code{format_out}.
}
\description{
Reads chromatograms from specified folders or vector of paths using file
parsers from \href{https://github.com/bovee/aston}{Aston},
\href{https://github.com/bovee/entab}{Entab},
\href{https://github.com/compomics/ThermoRawFileParser}{ThermoRawFileParser},
\href{https://lablicate.com/platform/openchrom}{OpenChrom},
\href{https://rainbow-api.readthedocs.io/}{rainbow}, or internal parsers.
}
\details{
Provides a general interface to chromConverter parsers. Currently recognizes
'Agilent ChemStation' (\code{.uv}, \code{.ch}, \code{.dx}), 'Agilent
MassHunter' (\code{.dad}), 'Thermo RAW' (\code{.raw}), 'Waters ARW' (\code{.arw}),
'Waters RAW' (\code{.raw}), 'Chromeleon ASCII' (\code{.txt}), 'Shimadzu ASCII'
(\code{.txt}), and 'Shimadzu LCD' files (preliminary support). Also, wraps
Openchrom parsers, which include many additional formats. To use 'Entab',
'ThermoRawFileParser', or 'Openchrom' parsers, they must be manually installed.
Please see the instructions in the
\href{https://ethanbass.github.io/chromConverter/}{README} for further details.
}
\section{Side effects}{
 If \code{export} is TRUE, chromatograms will be
exported in the format specified by \code{export_format} in the folder
specified by \code{path_out}. Currently, the only option for export is
\code{csv} unless the \code{parser} is \code{openchrom}.
}

\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
path <- "tests/testthat/testdata/dad1.uv"
chr <- read_chroms(path, find_files = FALSE, format_in = "chemstation_uv")
\dontshow{\}) # examplesIf}
}
\author{
Ethan Bass
}
